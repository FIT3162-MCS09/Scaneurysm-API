name: Deploy to AWS Lambda with Zappa

on:
  workflow_dispatch:

env:
  AWS_REGION: ap-southeast-1

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Create and activate virtual environment
      run: |
        python -m venv venv
        source venv/bin/activate
        echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV
        echo "PATH=$VIRTUAL_ENV/bin:$PATH" >> $GITHUB_ENV

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install zappa boto3==1.26.137 s3transfer==0.6.1

    - name: Get VPC Config
      id: vpc-config
      run: |
        # Install AWS CLI
        pip install awscli

        # Get network configuration from ECS
        CLUSTER="MCS09-cluster"
        SERVICE="mcs09-service"
        
        CONFIG=$(aws ecs describe-services --cluster $CLUSTER --services $SERVICE --query 'services[0].networkConfiguration.awsvpcConfiguration')
        
        # Extract subnets and security groups
        SUBNETS=$(echo $CONFIG | jq -r '.subnets[]' | tr '\n' ',' | sed 's/,$//')
        SECURITY_GROUPS=$(echo $CONFIG | jq -r '.securityGroups[]' | tr '\n' ',' | sed 's/,$//')
        
        # Update zappa_settings.json
        sed -i "s/\"SUBNET_ID_1\", \"SUBNET_ID_2\"/$SUBNETS/" zappa_settings.json
        sed -i "s/\"SECURITY_GROUP_ID\"/$SECURITY_GROUPS/" zappa_settings.json

    - name: Deploy with Zappa
      env:
        ENDPOINT: ${{ secrets.DB_ENDPOINT }}
        USER: ${{ secrets.DB_USERNAME }}
        PASS: ${{ secrets.DB_PASSWORD }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET: ${{ secrets.AWS_SECRET }}
      run: |
        # Ensure we're in the virtual environment
        source venv/bin/activate
        
        # Try to undeploy first to clean up any existing deployment
        zappa undeploy production -y || true
        
        # Create S3 bucket if it doesn't exist
        aws s3api create-bucket \
          --bucket zappa-mcs09-deployment \
          --region ap-southeast-1 \
          --create-bucket-configuration LocationConstraint=ap-southeast-1 || true
        
        # Clean up any existing API Gateways (optional, use carefully)
        # aws apigateway get-rest-apis --query 'items[?name==`mcs09-production`].id' --output text | xargs -I {} aws apigateway delete-rest-api --rest-api-id {} || true
        
        # Deploy with Zappa
        zappa deploy production

    - name: Check Zappa status
      if: success()
      run: |
        source venv/bin/activate
        zappa status production